{"version":3,"sources":["webpack:///./src/components/Slider/Slider.jsx","webpack:///./src/components/Slider/index.js","webpack:///./src/templates/index/page.js"],"names":["Slider","props","_createTimer","_removeTimer","timer","setInterval","_tiktok","interval","clearInterval","t","curr","state","len","list","length","undefined","setState","componentDidMount","this","componentDidUpdate","prevProps","componentWillUnmount","render","className","style","width","transform","map","edge","key","pick","to","fluid","alt","index","cls","onClick","PureComponent","defaultProps","auto","AuthorList","cover","author","id","src","nickname","slogan","SeriesList","series","name","description","TagList","tag","data","pageContext","posts","x","node","authors","tags","Layout","prev","slice","query","matches","Line","Post","post","seriesCover","authorsCover","Pagination","offset","top","bottom","marginRight"],"mappings":"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","file":"component---src-templates-index-page-js-4f162d8a786120689c4e.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport cls from 'classnames';\nimport pick from 'utils/pick';\n\nimport './style.less';\n\nclass Slider extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      curr: 0,\n    };\n    this.timer = null;\n  }\n\n  componentDidMount() {\n    this._createTimer();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.list.length !== this.props.list.length) {\n      this._createTimer();\n    }\n  }\n\n  componentWillUnmount() {\n    this._removeTimer();\n  }\n\n  _createTimer = () => {\n    this._removeTimer();\n\n    this.timer = setInterval(this._tiktok, this.props.interval);\n  };\n\n  _removeTimer = () => {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  };\n\n  _tiktok = t => {\n    const { curr } = this.state;\n    const { list } = this.props;\n    const len = list.length;\n\n    if (t !== undefined && t === curr) return;\n\n    this._createTimer();\n\n    this.setState({\n      curr: t !== undefined ? t : (curr + 1) % len,\n    });\n  };\n\n  render() {\n    const { curr } = this.state;\n    const { list } = this.props;\n\n    return (\n      <div className=\"slider\">\n        <div\n          className=\"slider__slides\"\n          style={{\n            width: `${list.length * 100}%`,\n            transform: `translateX(-${(100 / list.length) * curr}%)`,\n          }}\n        >\n          {list.map(edge => (\n            <div\n              key={pick(edge, 'id')}\n              className=\"slider__slide__wrapper\"\n              style={{ width: `${100 / list.length}%` }}\n            >\n              <div className=\"slider__slide\">\n                <Link to={pick(edge, 'fields.slug')}>\n                  <Img\n                    fluid={pick(\n                      edge,\n                      'frontmatter.cover.childImageSharp.fluid'\n                    )}\n                    alt={pick(edge, 'frontmatter.title')}\n                  />\n                </Link>\n              </div>\n              <div className=\"slider__slide__title\">\n                <Link to={pick(edge, 'fields.slug')}>\n                  {pick(edge, 'frontmatter.title')}\n                </Link>\n              </div>\n            </div>\n          ))}\n        </div>\n        <ul className=\"slider__dots\">\n          {list.map((edge, index) => (\n            <li\n              key={pick(edge, 'id')}\n              className={cls([\n                'slider__dot',\n                index === curr && 'slider__dot--active',\n              ])}\n              onClick={() => this._tiktok(index)}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nSlider.propTypes = {\n  auto: PropTypes.bool,\n  interval: PropTypes.number,\n  list: PropTypes.arrayOf(PropTypes.object),\n};\n\nSlider.defaultProps = {\n  auto: true,\n  interval: 7000,\n  list: [],\n};\n\nexport default Slider;\n","import Slider from './Slider.jsx';\n\nexport default Slider;\n","import React from 'react';\nimport Media from 'react-media';\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport Layout from 'components/Layout';\nimport Slider from 'components/Slider';\nimport Pagination from 'components/Pagination';\nimport { PostBig } from 'components/Post';\nimport { Parallel } from 'components/common';\nimport pick from 'utils/pick';\n\nimport './style.less';\n\nexport function AuthorList({ list, cover }) {\n  return (\n    <div className=\"index-page__author-list\">\n      <div className=\"index-page__author-list__header\">\n        <div className=\"index-page__author-list__title\">Popular Authors</div>\n        <Img\n          className=\"index-page__author-list__cover\"\n          fluid={pick(cover, 'childImageSharp.fluid')}\n        />\n      </div>\n      <div className=\"index-page__author-list__content\">\n        {list.map(author => (\n          <Link key={author.id} to={`/author/${author.id}`}>\n            <div className=\"author\">\n              <img\n                className=\"author__avatar\"\n                src={pick(author, 'avatar.childImageSharp.resize.src')}\n                alt={author.id}\n              />\n              <div className=\"author__wrapper\">\n                <div className=\"author__title\">{author.nickname}</div>\n                <div className=\"author__desc\">{author.slogan}</div>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport function SeriesList({ list, cover }) {\n  return (\n    <div className=\"index-page__series-list\">\n      <div className=\"index-page__series-list__header\">\n        <div className=\"index-page__series-list__title\">Popular Series</div>\n        <Img\n          className=\"index-page__series-list__cover\"\n          fluid={pick(cover, 'childImageSharp.fluid')}\n        />\n      </div>\n      <div className=\"index-page__series-list__content\">\n        {list.map(series => (\n          <Link key={series.id} to={`/series/${series.id}`}>\n            <div className=\"series\">\n              <img\n                className=\"series__cover\"\n                src={pick(series, 'cover.childImageSharp.resize.src')}\n                alt={series.id}\n              />\n              <div className=\"series__wrapper\">\n                <div className=\"series__title\">{series.name}</div>\n                <div className=\"series__desc\">{series.description}</div>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport function TagList({ list }) {\n  return (\n    <div className=\"index-page__tag-list\">\n      <div className=\"index-page__tag-list__header\">Popular Tags</div>\n      <div className=\"index-page__tag-list__content\">\n        {list.map((tag, index) => (\n          <div className=\"tag\" key={tag.id}>\n            <div className=\"index\">\n              {index + 1 < 10 ? `0${index + 1}` : index + 1}\n            </div>\n            <div className=\"title\">\n              <Link to={`/tag/${tag.id}`}>{tag.name}</Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ({ data, pageContext }) => {\n  const posts = (pick(data, 'posts.edges') || []).map(x => x.node) || [];\n  const series = (pick(data, 'series.edges') || []).map(x => x.node) || [];\n  const authors = (pick(data, 'authors.edges') || []).map(x => x.node) || [];\n  const tags = (pick(data, 'tags.edges') || []).map(x => x.node) || [];\n\n  return (\n    <Layout className=\"index-page\">\n      {!pageContext.prev && <Slider list={posts.slice(0, 1)} />}\n      <div className=\"index-page__separator\" />\n      <div className=\"index-page__title\">FEATURED</div>\n      <Media query=\"(max-width: 780px)\">\n        {matches =>\n          matches ? (\n            <Parallel className=\"index-page__parallel\">\n              <Parallel.Line style={{ width: '100%' }}>\n                {posts.slice(1).map(node => (\n                  <PostBig key={node.id} post={node} />\n                ))}\n                <SeriesList list={series} cover={data.seriesCover} />\n                <TagList list={tags} />\n                <AuthorList list={authors} cover={data.authorsCover} />\n                <Pagination {...pageContext} />\n              </Parallel.Line>\n            </Parallel>\n          ) : (\n            <Parallel\n              className=\"index-page__parallel\"\n              offset={{ top: 65, bottom: 0 }}\n            >\n              <Parallel.Line style={{ marginRight: 64 }}>\n                {posts.slice(1).map(node => (\n                  <PostBig key={node.id} post={node} />\n                ))}\n                <Pagination {...pageContext} />\n              </Parallel.Line>\n              <Parallel.Line width={328}>\n                <SeriesList list={series} cover={data.seriesCover} />\n                <TagList list={tags} />\n                <AuthorList list={authors} cover={data.authorsCover} />\n              </Parallel.Line>\n            </Parallel>\n          )\n        }\n      </Media>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query IndexPageQuery(\n    $posts: [String]\n    $tags: [String]\n    $series: [String]\n    $authors: [String]\n  ) {\n    posts: allMarkdownRemark(\n      filter: { id: { in: $posts } }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          ...PostBig\n        }\n      }\n    }\n    tags: allTagJson(filter: { id: { in: $tags } }) {\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    series: allSeriesJson(filter: { id: { in: $series } }) {\n      edges {\n        node {\n          id\n          name\n          description\n          cover {\n            ... on File {\n              childImageSharp {\n                resize(width: 200, height: 265, cropFocus: CENTER) {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    seriesCover: file(relativePath: { eq: \"cover1.png\" }) {\n      ... on File {\n        childImageSharp {\n          fluid(\n            maxHeight: 118\n            cropFocus: CENTER\n            traceSVG: { color: \"#d7efee\" }\n            duotone: { highlight: \"#d7efee\", shadow: \"#192550\" }\n          ) {\n            ...GatsbyImageSharpFluid_tracedSVG\n          }\n        }\n      }\n    }\n    authors: allAuthorJson(filter: { id: { in: $authors } }) {\n      edges {\n        node {\n          id\n          nickname\n          slogan\n          avatar {\n            ... on File {\n              childImageSharp {\n                resize(width: 80, height: 80, cropFocus: CENTER) {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    authorsCover: file(relativePath: { eq: \"cover2.png\" }) {\n      ... on File {\n        childImageSharp {\n          fluid(\n            maxHeight: 118\n            cropFocus: CENTER\n            traceSVG: { color: \"#D1EFFB\" }\n            duotone: { highlight: \"#0ec4f1\", shadow: \"#192550\", opacity: 25 }\n          ) {\n            ...GatsbyImageSharpFluid_tracedSVG\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
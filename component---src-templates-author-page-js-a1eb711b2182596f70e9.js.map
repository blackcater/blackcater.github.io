{"version":3,"sources":["webpack:///./src/templates/author/page.js"],"names":["data","pageContext","author","posts","pick","map","x","node","className","fluid","links","link","key","url","to","icon","post","id","query"],"mappings":"2FAAA,6KAae,sBAA4B,IAAzBA,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACdC,EAAWF,EAAXE,OACFC,EAAQC,YAAKJ,EAAM,eAAeK,KAAI,SAAAC,GAAC,OAAIA,EAAEC,SAAS,GAE5D,OACE,kBAAC,IAAD,CAAQC,UAAU,eAChB,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,uBACb,kBAAC,IAAD,CACEA,UAAU,sBACVC,MAAOL,YAAKF,EAAQ,kCAEtB,yBAAKM,UAAU,qBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,yBACZJ,YAAKF,EAAQ,aAEhB,yBAAKM,UAAU,uBACZJ,YAAKF,EAAQ,YAGlB,yBAAKM,UAAU,6BACXN,EAAOQ,OAAS,IAAIL,KAAI,SAAAM,GAAI,OAC5B,kBAAC,IAAD,CACEH,UAAU,oBACVI,IAAKD,EAAKE,IACVC,GAAIH,EAAKE,KAET,kBAAC,IAAD,CAAME,KAAMJ,EAAKI,cAM3B,yBAAKP,UAAU,sBACb,yBAAKA,UAAU,4BAAf,UACCL,EAAME,KAAI,SAAAW,GAAI,OACb,kBAAC,IAAD,CAAUJ,IAAKI,EAAKC,GAAID,KAAMA,QAGlC,kBAAC,IAAef,MAMjB,IAAMiB,EAAK","file":"component---src-templates-author-page-js-a1eb711b2182596f70e9.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport pick from 'utils/pick';\n\nimport { Icon } from 'components/common';\nimport Link from 'components/Link';\nimport Layout from 'components/Layout';\nimport Pagination from 'components/Pagination';\nimport { PostCard } from 'components/Post';\n\nimport './style.less';\n\nexport default ({ data, pageContext }) => {\n  const { author } = data;\n  const posts = pick(data, 'posts.edges').map(x => x.node) || [];\n\n  return (\n    <Layout className=\"author-page\">\n      <div className=\"author-page__content\">\n        <div className=\"author-page__header\">\n          <Img\n            className=\"author-page__avatar\"\n            fluid={pick(author, 'avatar.childImageSharp.fluid')}\n          />\n          <div className=\"author-page__info\">\n            <div className=\"author-page__info-top\">\n              <div className=\"author-page__nickname\">\n                {pick(author, 'nickname')}\n              </div>\n              <div className=\"author-page__slogan\">\n                {pick(author, 'slogan')}\n              </div>\n            </div>\n            <div className=\"author-page__info-bottom\">\n              {(author.links || []).map(link => (\n                <Link\n                  className=\"author-page__link\"\n                  key={link.url}\n                  to={link.url}\n                >\n                  <Icon icon={link.icon} />\n                </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className=\"author-page__posts\">\n          <div className=\"author-page__posts-title\">Latest</div>\n          {posts.map(post => (\n            <PostCard key={post.id} post={post} />\n          ))}\n        </div>\n        <Pagination {...pageContext} />\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query AuthorPageQuery($posts: [String], $author: String) {\n    posts: allMarkdownRemark(\n      filter: { id: { in: $posts } }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          ...PostCard\n        }\n      }\n    }\n    author: authorJson(id: { eq: $author }) {\n      id\n      nickname\n      slogan\n      avatar {\n        ... on File {\n          childImageSharp {\n            fluid(cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      links {\n        icon\n        url\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}